# Generated by Django 4.2.11 on 2024-05-10 17:54

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(help_text='Unique ID', primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, help_text='Creation date')),
                ('lastUpdate', models.DateTimeField(default=django.utils.timezone.now, help_text='Update date')),
                ('name', models.CharField(help_text='Category name', max_length=100)),
            ],
            options={
                'db_table': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(help_text='Unique ID', primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, help_text='Creation date')),
                ('lastUpdate', models.DateTimeField(default=django.utils.timezone.now, help_text='Update date')),
                ('email', models.EmailField(help_text='Email address', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Name and surname', max_length=100)),
                ('phone', models.CharField(help_text='Phone number', max_length=13, unique=True)),
                ('password', models.CharField(help_text='Password', max_length=1000)),
            ],
            options={
                'db_table': 'customers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(help_text='Unique ID', primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, help_text='Creation date')),
                ('lastUpdate', models.DateTimeField(default=django.utils.timezone.now, help_text='Update date')),
                ('title', models.CharField(help_text='The title of the article', max_length=100)),
                ('text', models.TextField(help_text='The main text of the article', max_length=1500)),
                ('image', models.ImageField(help_text='The image for the article', upload_to='app/static/newsImages')),
            ],
            options={
                'db_table': 'news',
                'ordering': ['createdAt'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(help_text='Unique ID', primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, help_text='Creation date')),
                ('lastUpdate', models.DateTimeField(default=django.utils.timezone.now, help_text='Update date')),
                ('name', models.CharField(help_text='Product name', max_length=200)),
                ('price', models.IntegerField(help_text='Price for one product')),
                ('image', models.ImageField(help_text='Product image', upload_to='app/static/products')),
                ('category', models.ForeignKey(default=1, help_text='Product category', on_delete=django.db.models.deletion.CASCADE, related_name='products_category', to='app.category')),
            ],
            options={
                'db_table': 'products',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(help_text='Unique ID', primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, help_text='Creation date')),
                ('lastUpdate', models.DateTimeField(default=django.utils.timezone.now, help_text='Update date')),
                ('country', models.CharField(help_text='Country of the company', max_length=50)),
                ('name', models.CharField(help_text='Company name', max_length=100)),
                ('deliveryTime', models.IntegerField(help_text='Days of delivery')),
                ('foundationDate', models.DateField(help_text='Foundation date')),
            ],
            options={
                'db_table': 'suppliers',
                'ordering': ['country'],
            },
        ),
        migrations.CreateModel(
            name='UserEmployee',
            fields=[
                ('id', models.BigAutoField(help_text='Unique ID', primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, help_text='Creation date')),
                ('lastUpdate', models.DateTimeField(default=django.utils.timezone.now, help_text='Update date')),
                ('name', models.CharField(help_text='Name and surname', max_length=100)),
                ('phone', models.CharField(help_text='Phone number', max_length=13, unique=True)),
                ('email', models.EmailField(help_text='Email address', max_length=50, unique=True)),
                ('password', models.CharField(help_text='password', max_length=32)),
                ('isAdmin', models.BooleanField(help_text='Is employee an admin')),
            ],
            options={
                'db_table': 'employees_accounts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(help_text='Unique ID', primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, help_text='Creation date')),
                ('lastUpdate', models.DateTimeField(default=django.utils.timezone.now, help_text='Update date')),
                ('salePrice', models.IntegerField(default=0, help_text='Sale price')),
                ('customer', models.ForeignKey(help_text='Customer that made a purchase', on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='app.customer')),
                ('products', models.ManyToManyField(help_text='List of bought products', to='app.product')),
            ],
            options={
                'db_table': 'sales',
                'ordering': ['createdAt'],
            },
        ),
        migrations.CreateModel(
            name='RegularCustomer',
            fields=[
                ('id', models.BigAutoField(help_text='Unique ID', primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, help_text='Creation date')),
                ('lastUpdate', models.DateTimeField(default=django.utils.timezone.now, help_text='Update date')),
                ('customer', models.ForeignKey(help_text='Customer related', on_delete=django.db.models.deletion.CASCADE, related_name='regular', to='app.customer')),
            ],
            options={
                'db_table': 'regular_customers',
                'ordering': ['createdAt'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='supplier',
            field=models.ForeignKey(help_text='Product supplier', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='app.supplier'),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(help_text='Unique ID', primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, help_text='Creation date')),
                ('lastUpdate', models.DateTimeField(default=django.utils.timezone.now, help_text='Update date')),
                ('position', models.CharField(help_text='Position in company', max_length=50)),
                ('salary', models.IntegerField(help_text='Monthly salary (gross)')),
                ('photo', models.ImageField(help_text='Employee photo', upload_to='app/static/employees')),
                ('db_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.useremployee')),
            ],
            options={
                'db_table': 'employees',
                'ordering': ['db_id'],
            },
        ),
    ]
